/* Auto-generated by genmsg_cpp for file /home/dabiri/ros/controller/srv/ControllerCmd.srv */
#ifndef CONTROLLER_SERVICE_CONTROLLERCMD_H
#define CONTROLLER_SERVICE_CONTROLLERCMD_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace controller
{
template <class ContainerAllocator>
struct ControllerCmdRequest_ : public ros::Message
{
  typedef ControllerCmdRequest_<ContainerAllocator> Type;

  ControllerCmdRequest_()
  : cmd()
  , valueString()
  {
  }

  ControllerCmdRequest_(const ContainerAllocator& _alloc)
  : cmd(_alloc)
  , valueString(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _cmd_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  cmd;

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _valueString_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  valueString;


private:
  static const char* __s_getDataType_() { return "controller/ControllerCmdRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "4673beee203938f168b8771b628c2851"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "4673beee203938f168b8771b628c2851"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string cmd\n\
string valueString\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, cmd);
    ros::serialization::serialize(stream, valueString);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, cmd);
    ros::serialization::deserialize(stream, valueString);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(cmd);
    size += ros::serialization::serializationLength(valueString);
    return size;
  }

  typedef boost::shared_ptr< ::controller::ControllerCmdRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::controller::ControllerCmdRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct ControllerCmdRequest
typedef  ::controller::ControllerCmdRequest_<std::allocator<void> > ControllerCmdRequest;

typedef boost::shared_ptr< ::controller::ControllerCmdRequest> ControllerCmdRequestPtr;
typedef boost::shared_ptr< ::controller::ControllerCmdRequest const> ControllerCmdRequestConstPtr;


template <class ContainerAllocator>
struct ControllerCmdResponse_ : public ros::Message
{
  typedef ControllerCmdResponse_<ContainerAllocator> Type;

  ControllerCmdResponse_()
  {
  }

  ControllerCmdResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "controller/ControllerCmdResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "4673beee203938f168b8771b628c2851"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::controller::ControllerCmdResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::controller::ControllerCmdResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct ControllerCmdResponse
typedef  ::controller::ControllerCmdResponse_<std::allocator<void> > ControllerCmdResponse;

typedef boost::shared_ptr< ::controller::ControllerCmdResponse> ControllerCmdResponsePtr;
typedef boost::shared_ptr< ::controller::ControllerCmdResponse const> ControllerCmdResponseConstPtr;

struct ControllerCmd
{

typedef ControllerCmdRequest Request;
typedef ControllerCmdResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct ControllerCmd
} // namespace controller

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::controller::ControllerCmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4673beee203938f168b8771b628c2851";
  }

  static const char* value(const  ::controller::ControllerCmdRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x4673beee203938f1ULL;
  static const uint64_t static_value2 = 0x68b8771b628c2851ULL;
};

template<class ContainerAllocator>
struct DataType< ::controller::ControllerCmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "controller/ControllerCmdRequest";
  }

  static const char* value(const  ::controller::ControllerCmdRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::controller::ControllerCmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string cmd\n\
string valueString\n\
\n\
";
  }

  static const char* value(const  ::controller::ControllerCmdRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::controller::ControllerCmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::controller::ControllerCmdResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::controller::ControllerCmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "controller/ControllerCmdResponse";
  }

  static const char* value(const  ::controller::ControllerCmdResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::controller::ControllerCmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
";
  }

  static const char* value(const  ::controller::ControllerCmdResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::controller::ControllerCmdResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::controller::ControllerCmdRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.cmd);
    stream.next(m.valueString);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ControllerCmdRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::controller::ControllerCmdResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct ControllerCmdResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<controller::ControllerCmd> {
  static const char* value() 
  {
    return "4673beee203938f168b8771b628c2851";
  }

  static const char* value(const controller::ControllerCmd&) { return value(); } 
};

template<>
struct DataType<controller::ControllerCmd> {
  static const char* value() 
  {
    return "controller/ControllerCmd";
  }

  static const char* value(const controller::ControllerCmd&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<controller::ControllerCmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4673beee203938f168b8771b628c2851";
  }

  static const char* value(const controller::ControllerCmdRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<controller::ControllerCmdRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "controller/ControllerCmd";
  }

  static const char* value(const controller::ControllerCmdRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<controller::ControllerCmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "4673beee203938f168b8771b628c2851";
  }

  static const char* value(const controller::ControllerCmdResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<controller::ControllerCmdResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "controller/ControllerCmd";
  }

  static const char* value(const controller::ControllerCmdResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // CONTROLLER_SERVICE_CONTROLLERCMD_H

